@model CustomShop.Models.Good

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="create-form centered-div">


    @using (Html.BeginForm("Edit", "GoodsEditor", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <h2>Редагувати товар</h2>
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="img-editor-container disabled-border">
            @Html.Raw("<img class = 'img-view' src=\"data:image/jpeg;base64," + Convert.ToBase64String(Model.Image) + "\" />")
            <input type="file" class="disabeled-file-input" name="uploadImage" accept="image/*" />
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                <lable class="control-label col-md-2">Доступні кольори:</lable>
                <div class="col-md-10">
                    <input class="colors-file-input form-control text-box single-line" name="colorslist" value="@ViewBag.ColorsList"/>
                </div>
            </div>
        </div>
        <div class="col-md-10 color-list"></div>

        <hr />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.GoodTypeId, "Тип товару", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GoodTypeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GoodTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group submit-button">
                <input type="submit" value="Зберегти" class="btn btn-default" />
            </div>
        </div>

        <div class="return-link">
            @Html.ActionLink("Повернутись до списку", "Index")
        </div>
    }
</div>